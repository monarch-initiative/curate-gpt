[tool.poetry]
name = "curate-gpt"
version = "0.0.0.post2.dev0+335f59e"
description = "curate-gpt"
authors = ["Author 1 <cjmungall@lbl.gov>"]
license = "BSD-3"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9, !=3.9.7"
click = "^8.1.7"
importlib-metadata = ">=6"
oaklib = ">=0.5.15"
beautifulsoup4 = ">=4.8.0"
streamlit = ">=1.22.0"
openai = "^1.11"
wikipedia = ">=1.4.0"
google-search-results = ">=2.4.2"
chromadb = "^0.4.22"
tiktoken = "^0.4.0"
inflection = ">=0.5.1"
sentence-transformers = ">=2.2.2"
pymongo = ">=4.4.1"
linkml-runtime = "^1.6.3"
python-ulid = "^1.1.0"
sqlite-utils = "^3.34"
gpt4all = "^2.0.1"
httpx = "^0.24.1"
eutils = "^0.6.0"
matplotlib = "^3.7.2"
seaborn = "^0.12.2"
bioc = {version = ">=2.0.0.post5", optional = true}
requests-cache = "^1.1.0"
jsonpatch = "^1.33"
scholarly = "^1.7.11"
pytrials = "^0.3.0"
xmltodict = "^0.13.0"
ratelimiter = "^1.2.0.post0"
google-api-python-client = "^2.97.0"
google-auth-oauthlib = "^1.0.0"
textract = "1.5.0"
jsonpath-ng = "^1.5.3"
pygithub = "^1.59.1"
jsonlines = "^3.1.0"
llm = "^0.13"
llm-gpt4all = "^0.3"
gspread = "^5.10.0"
defusedxml = "^0.7.1"
click-default-group = "^1.2.4"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
pytest = ">=7.1.2"
tox = ">=3.25.1"
linkml = "^1.5.6"
jupyter = "^1.0.0"
sphinx = {version = ">=6.1.3", extras = ["docs"]}
sphinx-rtd-theme = {version = ">=1.0.0", extras = ["docs"]}
sphinx-autodoc-typehints = {version = ">=1.2.0", extras = ["docs"]}
sphinx-click = {version = ">=4.3.0", extras = ["docs"]}
sphinx-automodapi = {version = "*", extras = ["docs"]}
myst-parser = {version = ">=0.18.1", extras = ["docs"]}


[tool.poetry.scripts]
curategpt = "curate_gpt.cli:main"

[tool.poetry.extras]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
    "sphinx-click",
    "myst-parser"
    ]
bioc = [
    "bioc"
]

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310"]

[tool.ruff]
extend-ignore = [
    "D211",  # `no-blank-line-before-class`
    "D212",  # `multi-line-summary-first-line`
    ]
line-length = 100

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

# Select or ignore from https://beta.ruff.rs/docs/rules/
select = [
    "B",  # bugbear
    # "D",  # pydocstyle
    # "E",  # pycodestyle errors
    "F",  # Pyflakes
    "I",  # isort
    # "S",  # flake8-bandit
    "W",  # Warning
]

unfixable = []
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.codespell]
skip = "*.po,*.ts,.git,pyproject.toml"
count = ""
quiet-level = 3
# ignore-words-list = ""

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
